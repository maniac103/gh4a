buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

repositories {
    maven { url 'http://dl.bintray.com/populov/maven' }
    maven { url 'https://github.com/kageiit/maven-repo/raw/master' }
    maven { url "https://github.com/kolavar/android-support-v4-preferencefragment/raw/master/maven-repository/" }
    maven { url 'http://download.crashlytics.com/maven' }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

android {
    signingConfigs {
        playStore
    }
    compileSdkVersion 21
    buildToolsVersion '21.0.1'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
        versionCode 38
        versionName "3.7.1"
    }

    buildTypes {
        debug {
            zipAlign true
        }
        release {
            zipAlign true
            signingConfig signingConfigs.playStore
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.viewpagerindicator:library:2.4.1@aar'
    compile 'com.larswerkman:HoloColorPicker:1.4@aar'
    compile 'com.github.johnkil.android-progressfragment:progressfragment:1.4.0@aar'
    compile 'com.android.support:support-v4-preferencefragment:1.0.0@aar'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.okhttp:okhttp:1.5.4'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.4.Final'
    compile 'com.crashlytics.android:crashlytics:1.+'
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
}

if (props.containsKey('STORE_FILE')
        && props.containsKey('STORE_PASSWORD')
        && props.containsKey('KEY_ALIAS')
        && props.containsKey('KEY_PASSWORD')) {
    android.signingConfigs.playStore.storeFile = file(props['STORE_FILE'])
    android.signingConfigs.playStore.storePassword = props['STORE_PASSWORD']
    android.signingConfigs.playStore.keyAlias = props['KEY_ALIAS']
    android.signingConfigs.playStore.keyPassword = props['KEY_PASSWORD']
} else {
    println 'signing.properties not found or incomplete'
    android.buildTypes.release.signingConfig = null
}
